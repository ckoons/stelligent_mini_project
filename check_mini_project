#!/bin/bash

# check_micro_project verifies the cloud formation stack defined resource website displays "Automation for the People"
#    The check script accepts one OPTIONAL parameter ($1) the STACKNAME default STACKNAME is Stelligent
#
STACKNAME=${1-Stelligent}

# Require the aws cli be installed
AWS=$(which aws)
if [ -z "$AWS" ]
then
  echo "Error: AWS CLI must be installed for $0 to run, please see: http://docs.aws.amazon.com/cli/latest/userguide/installing.html"
  exit
fi

# Parse JSON Input "KEY":"VALUE" Strings
#    Find Key ($2) in Input ($1), Return Value found prior to fourth "
function get_value {
  if [ -z "$1" ]
  then
    echo "No Input"
    return -1
  fi
  if [ -z "$2" ]
  then
    echo "No Key"
    return -2
  fi

  echo "$1" | grep "$2" | sed -e 's/^[ \t]*//' | cut -d \" -f4

}

# Verify Website URL ($1) Contains Pattern String ($2)
#   cURL timeout in 5 seconds, suppresses progress bar
#   Returns Number of Lines containing Pattern String Found
function check_website_content {
  if [ -z "$1" ]
  then
    echo "No URL"
    return -1
  fi
  if [ -z "$2" ]
  then
    echo "No Pattern String"
    return -2
  fi

  echo $(curl -m 5 "$1" 2>/dev/null) | grep -c "$2"

}


INPUT=$(aws cloudformation describe-stacks --stack-name "$STACKNAME" 2>/dev/null)
if [ $? -ne 0 ]
then
    echo "Error: aws cloudformation describe-stacks --stack-name $STACKNAME not found"
    exit
fi

echo "$INPUT"

STATUS=$(get_value "$INPUT" "StackStatus")
echo "StackStatus : $STATUS"

if [ "$STATUS" != "CREATE_COMPLETE" ]
then
  echo "$STACKNAME web server not currently running"
  exit
fi

URL=$(get_value "$INPUT" "OutputValue")
if [ -z "$URL" ]
then
  echo "Error: $STACKNAME web server URL not found"
  exit
fi
echo "$STACKNAME web server URL : $URL"


FOUND=$(check_website_content "$URL" "Automation for the People")
if [ $FOUND -ne 0 ]
then
  echo "$STACKNAME $URL running successfully and displays Automation for the People"
else
  echo "Error: $STACKNAME $URL web server not providing correct content"
fi


